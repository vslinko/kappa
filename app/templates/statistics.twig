<!DOCTYPE html>
<html>
<head>
    <title>Statistics</title>
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        body {
            background-color: #2e3436;
            font-family: "PT Sans", sans-serif;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            width: 1px;
            height: 100px;
            padding: 0 50px;
            background-color: #555753;
            color: #eeeeec;
            white-space: nowrap;
        }

        td {
            background-color: #888a85;
            vertical-align: top;
        }

        div {
            position: absolute;
            width: 0px;
            height: 100px;
            line-height: 100px;
            text-indent: 20px;
        }
    </style>
    <script>
        (function () {
            var ColorCycle = function () {
                var colors = ['#fce94f', '#fcaf3e', '#e9b96e', '#8ae234', '#729fcf', '#ad7fa8', '#ef2929'];
                var i = -1;

                this.next = function () {
                    i++;
                    if (i == colors.length) {
                        i = 0;
                    }
                    return colors[i];
                };
            };

            var TextMeasure = function () {
                var el = document.createElement('p');
                el.style.position = 'absolute';
                el.style.width = 'auto';
                el.style.height = 'auto';
                el.style.top = '100%';
                document.body.appendChild(el);

                this.measure = function (string) {
                    el.innerHTML = string;
                    var sizes = {width: el.clientWidth, height: el.clientHeight};
                    el.innerHTML = '';

                    return sizes;
                };
            };

            var Statistics = function (el, textSizeTestEl) {
                var colorCycle = new ColorCycle();
                var textMeasure = new TextMeasure(textSizeTestEl);

                var data = el.getElementsByTagName('td');
                var statuses = el.getElementsByTagName('div');

                this.start = parseInt(el.getAttribute('data-start'));
                this.end = parseInt(el.getAttribute('data-end'));
                this.width = data.length > 0 ? data[0].scrollWidth : el.scrollWidth;
                this.zoom = (this.end - this.start) / this.width;

                this.calculatePosition = function (status) {
                    var margin = Math.round((status.getAttribute('data-start') - this.start) / this.zoom);
                    var width = Math.round((status.getAttribute('data-end') - this.start) / this.zoom) - margin;

                    status.style.marginLeft = margin + 'px';
                    status.style.width = width + 'px';
                };

                this.arrangeInformation = function (status) {
                    var title = status.getAttribute('data-title');

                    if (textMeasure.measure(title).width + 40 < status.clientWidth) {
                        status.innerText = title;
                    }
                };

                this.colorize = function (status) {
                    status.style.backgroundColor = colorCycle.next();
                };

                this.arrange = function (status) {
                    this.calculatePosition(status);
                    this.arrangeInformation(status);
                    this.colorize(status);
                };

                for (var i = 0; i < statuses.length; i++) {
                    this.arrange(statuses[i]);
                }
            };

            window.onload = function () {
                new Statistics(document.getElementById('statistics'));
            };
        })();
    </script>
</head>
<body>
<table id="statistics" data-start="{{ statistics.start }}" data-end="{{ statistics.end }}">
    {% for staff, statuses in statistics.staffs %}
    <tr>
        <th>{{ staff }}</th>
        <td>
            {% for status in statuses %}
            <div data-start="{{ status.start }}" data-end="{{ status.end }}" data-title="{{ status.title }}"></div>
            {% endfor %}
        </td>
    </tr>
    {% endfor %}
</table>
</body>
</html>
